name: Release

on:
  push:
    branches:
      - release
    tags:
      - 'v*'
env:
  HOST: ${{ secrets.HOST}}
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies
        working-directory: ./
        run: npm install

      - name: Build
        working-directory: ./
        run: npm run build

      - name: Prepare .env
        working-directory: ./
        run: |
          sed -i 's/\$DB_PORT/${{ secrets.DB_PORT }}/g' .env 
          sed -i 's/\$DB_USERNAME/${{ secrets.DB_USERNAME }}/g' .env 
          sed -i 's/\$DB_PASSWORD/${{ secrets.DB_PASSWORD }}/g' .env 
          sed -i 's/\$DB_HOST/${{ secrets.DB_HOST }}/g' .env
          sed -i 's/\$DB_NAME/${{ secrets.DB_NAME }}/g' .env
          mv .env dist/.env
          sed -i 's/\$REDIS_PWD/${{ secrets.REDIS_PWD }}/g' docker/docker-compose.yml
          sed -i 's/\$POSTGRES_USER/${{ secrets.POSTGRES_USER }}/g' docker/docker-compose.yml 
          sed -i 's/\$POSTGRES_PASSWORD/${{ secrets.POSTGRES_PASSWORD }}/g' docker/docker-compose.yml
          mv docker/docker-compose.yml dist/docker-compose.yml

      - name: Prepare SSH key
        uses: kielabokkie/ssh-key-and-known-hosts-action@v1
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}
          ssh-host: ${{ secrets.HOST }}

      - name: copy files
        working-directory: ./
        run: |
          echo "Start deploy to: ${HOST}"
          mv dist backend-dist && mv node_modules backend-dist/node_modules && tar czv backend-dist | ssh root@${HOST} 'cat | tar xz -C /var/www/backend/'

      - name: restart api app
        run: |
          echo "restart API"
          ssh root@${HOST} 'pm2 restart  http-api-service'

      - name: Finish Message
        run: |
          echo "deploy completed"

      - name: Notify On Error
        if: ${{ failure() || cancelled() }}
        run: |
          echo "deploy error"
